name: 'Release - Beta'

on:
  push:
    branches:
      - 'master'
  release:
    types: [published]
    branches:
      - 'master'

env:
  # Workaround for GitVersionTask bug in combination with .NET Core SDK 3.1.200
  # (see, e.g., https://github.com/dotnet/sdk/issues/10878 and https://github.com/GitTools/GitVersion/issues/2063)
  MSBUILDSINGLELOADCONTEXT: 1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Fetch all branches (used by GitVersion)
      run: git fetch --prune --unshallow

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.200

    - name: Restore library
      run: dotnet restore src/BlazorLazyLoading.sln -p:BLLUseLocalNugetPackages=true

    - name: Build library
      run: dotnet build src/BlazorLazyLoading.sln -c Release -p:BLLUseLocalNugetPackages=true
  
    - name: Test library
      run: dotnet test src/BlazorLazyLoading.sln -c Release -p:BLLUseLocalNugetPackages=true

    - name: Pack library
      run: dotnet pack src/BlazorLazyLoading.sln -c Release -p:BLLUseLocalNugetPackages=true

    - name: Restore demo
      run: dotnet restore demo/Demo.sln -p:BLLUseLocalNugetPackages=true

    - name: Build demo
      run: dotnet build demo/Demo.sln -c Release -p:BLLUseLocalNugetPackages=true

    - name: Publish demo
      run: dotnet publish demo/ServerHost/ServerHost.csproj -c Release -p:BLLUseLocalNugetPackages=true -o output/demo

    - name: Test demo
      run: dotnet test demo/Demo.sln -c Release -p:BLLUseLocalNugetPackages=true

    - name: Push package to NuGet
      run: dotnet nuget push --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json output/nuget/**/*.nupkg

    - name: Add GitHub NuGet Source
      run: dotnet nuget add source https://nuget.pkg.github.com/isc30/index.json --name "github" --username isc30 --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

    - name: Push package to GitHub
      run: dotnet nuget push --skip-duplicate --source "github" output/nuget/**/*.nupkg

    - name: Prepare for Github Pages deployment
      run: find output/demo -name "*.gitignore" -type f -print0 | xargs -0 /bin/rm -f

    - name: Deploy demo to Github Pages
      uses: jamesives/github-pages-deploy-action@3.4.9
      with:
        FOLDER: output/demo/wwwroot
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BRANCH: gh-pages

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: output
        path: output
